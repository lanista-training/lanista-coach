{"version":3,"file":"static/webpack/static/development/pages/login.js.b12c61f5138b778e57f9.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport Layout from '../components/layout'\nimport { login } from '../lib/auth'\nimport gql from \"graphql-tag\"\nimport { Mutation } from \"react-apollo\"\nimport styled from 'styled-components'\nimport css from \"../style.css\"\n\nconst LOGIN = gql`\n  mutation Login( $email: String!,  $password: String!) {\n     login(email: $email, password: $password) {\n         token\n         user {\n          id\n          email\n          first_name\n          last_name\n          plans {\n            name\n          }\n        }\n     }\n  }\n`;\n\nconst ME_QUERY = gql`\n  query CurrentUserForLayout {\n    me {\n      id\n      first_name\n      last_name\n      email\n      plans {\n        name\n      }\n    }\n  }\n`\n\nconst Stage = styled.div`\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n`;\n\nconst History = styled.div`\n  height: 20%;\n`;\n\nconst Message = styled.div`\n  height: 60%;\n  margin-left: 1em;\n  font-size: 1.5em;\n  font-weight: bolder;\n`;\n\nconst InputSection = styled.div`\n  height: 20%;\n`;\n\nclass Login extends Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n      error: '',\n      message:  'Willkommen bei Lanista',\n      history: [],\n    }\n  }\n\n  async _confirm( data ) {\n    const { token } = data.login\n    login({ token })\n  }\n\n  render () {\n    const { email, password, message } = this.state\n    return (\n      <Mutation\n        mutation={LOGIN}\n        variables={{ email: this.state.email, password: this.state.password }}\n        onCompleted={data => this._confirm(data)}\n        update={(cache, { data: { login } }) => {\n          console.log(\"update\")\n          //const query = cache.readQuery({ query: ME_QUERY });\n          //console.log( \"query\" )\n          //console.log( query )\n          console.log(\"login.user\")\n          console.log(login.user)\n          cache.writeQuery({\n            query: ME_QUERY,\n            data: { me: login.user },\n          });\n        }}\n      >\n        {(login, { data }) => {\n          return (\n            <Stage>\n              <History>\n                History\n              </History>\n              <Message>\n                {message}\n              </Message>\n              <InputSection>\n                InputSection\n              </InputSection>\n            </Stage>\n          )\n        }}\n      </Mutation>\n    )\n  }\n}\n\nexport default Login\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAiBA;AAcA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;;;;AACA;;;;;;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;;;;AAvDA;AACA;AAyDA;;;;A","sourceRoot":""}